image: Visual Studio 2017

environment:
  SHFBROOT:  C:\Program Files (x86)\EWSoftware\Sandcastle Help File Builder\
  SandCastleZipFile: SHFBInstaller.zip
  SandCastleUri: https://github.com/EWSoftware/SHFB/releases/download/v2017.1.28.0/SHFBInstaller_v20171.28.0.zip
  
install:
  - choco install gitversion.portable -pre -y
  - ps: Start-FileDownload $env:SandCastleUri -FileName $env:SandCastleZipFile
  - cmd: 7z x SHFBInstaller.zip -y
  - ps: msiexec /i InstallResources\SandcastleHelpFileBuilder.msi /quiet /qn /norestart /log install.log


before_build:
  - dotnet restore dotNetRDF.sln
  - ps: gitversion /l console /output buildserver /updateassemblyinfo

configuration: Release

build_script:
  - dotnet build
  - dotnet pack -c Release -o %APPVEYOR_BUILD_FOLDER%\nugets Libraries/dotNetRDF /p:Version=%GitVersion_NuGetVersion%
  - dotnet pack -c Release -o %APPVEYOR_BUILD_FOLDER%\nugets Libraries/dotNetRDF.Data.DataTables /p:Version=%GitVersion_NuGetVersion%
  - dotnet pack -c Release -o %APPVEYOR_BUILD_FOLDER%\nugets Libraries/dotNetRDF.Data.Virtuoso /p:Version=%GitVersion_NuGetVersion%
  - dotnet pack -c Release -o %APPVEYOR_BUILD_FOLDER%\nugets Libraries/dotNetRDF.Query.FullText /p:Version=%GitVersion_NuGetVersion%
  - dotnet pack -c Release -o %APPVEYOR_BUILD_FOLDER%\nugets Libraries/dotNetRDF.Query.Spin /p:Version=%GitVersion_NuGetVersion%
  - dotnet pack -c Release -o %APPVEYOR_BUILD_FOLDER%\nugets Libraries/dotNetRDF.Web /p:Version=%GitVersion_NuGetVersion%

test_script:
  - ps: |
      cd Testing\dotNetRDF.Internals.Tests
      dotnet xunit -configuration %CONFIGURATION% -notrait "Category=explicit" | Out-File internalstest.log
      if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode)  }
      cd ..\dotNetRDF.Tests
      dotnet xunit -configuration %CONFIGURATION% -notrait "Category=explicit" | Out-File test.log
      if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode)  }
      cd ..\dotNetRDF.Query.FullText.Tests
      dotnet xunit -configuration %CONFIGURATION% -trait "Category=fulltext" | Out-File fulltext.log
      if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode)  }

after_test:
  - cmd: msbuild Build\shfb\dotnetrdf.shfbproj /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll" /p:Configuration=%CONFIGURATION% /p:HelpFileVersion=%GitVersion_NuGetVersion%
      
deploy:
  - provider: GitHub
    description: 'dotNetRDF $(GitVersion_SemVer)'
    auth_token:
      secure: j3GoyDavErTD91EcSTfNBbQyTc7tqpp+klmmz85xC4fjbE8Gl2brFjr8t3/Zzwmk
    on:
      appveyor_repo_tag: true 
    artifact: Build\shfb\Help.zip, Build\shfb\Help\dotNetRDFApi.chm, /.*\.nupkg/
  - provider: NuGet
    api_key:
      secure: URqGK+AnkTfy7Q36+5K2kNv2qpaI4ZOzjnRGry8tMiOMCtuqrwJWW/jSaEGhchuo
    on:
      appveyor_repo_tag: true 
    artifact: /((?!Spin).)*.nupkg/

on_finish:
  - ps: |
      $ws = (New-Object 'System.Net.WebClient')
      if((Test-Path .\internalstest.log)) {    
        Push-AppveyorArtifact .\internalstest.log
      }
      if((Test-Path .\test.log)) {    
        Push-AppveyorArtifact .\test.log
      }
      if((Test-Path .\fulltext.log)) {    
        Push-AppveyorArtifact .\fulltext.log
      }

artifacts:
  - path: 'nugets\*.nupkg'
  - path: 'Build\shfb\Help\dotNetRDFApi.chm'
  - path: 'Build\shfb\Help'

